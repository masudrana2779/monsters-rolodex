{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","Monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handelChange","type","onChange","App","handleSearch","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAaeA,EATF,SAACC,GACV,OACI,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCKfC,EATE,SAAAR,GACb,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCKtCO,G,MAVG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAC5B,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCPG,E,kDAnCX,aAAe,IAAD,8BACV,gBAcJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAdzC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJP,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,6CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAOhD,WAAU,IAAD,EAC2BC,KAAKN,MAA9Bd,EADF,EACEA,SAAUW,EADZ,EACYA,YACXU,EAAmBrB,EAASsB,QAAO,SAAAC,GAAO,OAC5CA,EAAQ1B,KAAK2B,cAAcC,SAASd,EAAYa,kBAEpD,OACI,sBAAKhC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWW,YAAa,kBACbC,aAAcgB,KAAKZ,eAC9B,cAAC,EAAD,CAAUR,SAAUqB,W,GA9BlBK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.63068c55.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className={'card-container'}>\r\n            <img src={`https://robohash.org/${props.Monster.id}?set=set2&size=180x180`} alt=\"\"/>\r\n            <h2>{props.Monster.name}</h2>\r\n            <p>{props.Monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\n\r\nimport './card-list.style.css'\r\nimport Card from \"../card/card.component\";\r\n\r\nconst CardList = props => {\r\n    return(\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((Monster) =>\r\n                <Card Monster={Monster} key={Monster.id} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nimport './searchBox.style.css';\r\n\r\nconst SearchBox = ({placeholder,handelChange}) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handelChange}\r\n        />\r\n    )\r\n}\r\nexport default SearchBox;","import React, {Component} from 'react';\nimport './App.css';\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/searchBox/searchBox.component\";\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n        // this.handleSearch = this.handleSearch.bind(this);\n     }\n\n    componentDidMount() {\n        fetch(\"http://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}))\n    }\n\n    handleSearch = (event) => {\n        this.setState({searchField: event.target.value})\n    }\n\n    render() {\n        const {monsters, searchField} = this.state;\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox placeholder={'Search Monsters'}\n                           handelChange={this.handleSearch}/>\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}